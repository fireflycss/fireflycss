export default {
  transform: {
    prefix: "transform",
    property: "transform",
    dynamic: {
      enabled: true,
      dataTypes: ["function", "keyword"],
      functions: [
        "matrix",
        "matrix3d",
        "translate",
        "translate3d",
        "translateX",
        "translateY",
        "translateZ",
        "scale",
        "scale3d",
        "scaleX",
        "scaleY",
        "scaleZ",
        "skew",
        "skewX",
        "skewY",
        "rotate",
        "rotate3d",
        "rotateX",
        "rotateY",
        "rotateZ",
        "perspective",
      ],
      //TODO to support the x y z functions, case has to not matter, otherwise it wont pick up the class name
      combinations: 21,
    },
    keys: {
      "": "translateX(var(--ff-translate-x, 0)) translateY(var(--ff-translate-y, 0)) rotate(var(--ff-rotate, 0)) skewX(var(--ff-skew-x, 0)) skewY(var(--ff-skew-y, 0)) scaleX(var(--ff-scale-x, 1)) ScaleY(var(--ff-scale-y, 1))",
      gpu: "translate3d(var(--ff-translate-x, 0), var(--ff-translate-y, 0), var(--ff-translate-z, 0)) rotate(var(--ff-rotate, 0)) rotateX(var(--ff-rotate-x, 0)) rotateY(var(--ff-rotate-y, 0)) rotateZ(var(--ff-rotate-z, 0)) skewX(var(--ff-skew-x, 0)) skewY(var(--ff-skew-y, 0)) scale3d(var(--ff-scale-x, 1), var(--ff-scale-y, 1), var(--ff-scale-z, 1))",
      none: "none",
    },
  },
  transformOrigin: {
    prefix: "origin",
    property: "transform-origin",
    dynamic: {
      enabled: true,
      dataTypes: ["length", "percentage", "keyword"],
      combinations: 3,
    },
    keys: {
      center: "center",
      top: "top",
      "top-right": "top right",
      right: "right",
      "bottom-right": "bottom right",
      bottom: "bottom",
      "bottom-left": "bottom left",
      left: "left",
      "top-left": "top left",
    },
  },
  transformStyle: {
    prefix: "transform",
    property: "transform-style",
    dynamic: { enabled: false, dataTypes: ["keyword"] },
    keys: {
      flat: "flat",
      "preserve-3d": "preserve-3d",
    },
  },
  translateX: {
    prefix: "translate-x",
    property: "--ff-translate-x",
    dynamic: { enabled: true, dataTypes: ["length", "percentage"] },
    keys: {},
  },
  translateY: {
    prefix: "translate-y",
    property: "--ff-translate-y",
    dynamic: { enabled: true, dataTypes: ["length", "percentage"] },
    keys: {},
  },
  translateZ: {
    prefix: "translate-z",
    property: "--ff-translate-z",
    dynamic: { enabled: true, dataTypes: ["length", "percentage"] },
    keys: {},
  },
  rotate: {
    prefix: "rotate",
    property: "--ff-rotate",
    dynamic: { enabled: true, dataTypes: ["angle"] },
    keys: {},
  },
  rotateX: {
    prefix: "rotate-x",
    property: "--ff-rotate-x",
    dynamic: { enabled: true, dataTypes: ["angle"] },
    keys: {},
  },
  rotateY: {
    prefix: "rotate-y",
    property: "--ff-rotate-y",
    dynamic: { enabled: true, dataTypes: ["angle"] },
    keys: {},
  },
  rotateZ: {
    prefix: "rotate-z",
    property: "--ff-rotate-z",
    dynamic: { enabled: true, dataTypes: ["angle"] },
    keys: {},
  },
  skewX: {
    prefix: "skew-x",
    property: "--ff-skew-x",
    dynamic: { enabled: true, dataTypes: ["angle"] },
    keys: {},
  },
  skewY: {
    prefix: "skew-y",
    property: "--ff-skew-y",
    dynamic: { enabled: true, dataTypes: ["angle"] },
    keys: {},
  },
  skewZ: {
    prefix: "skew-z",
    property: "--ff-skew-z",
    dynamic: { enabled: true, dataTypes: ["angle"] },
    keys: {},
  },
  scale: {
    prefix: "scale",
    property: ["--ff-scale-x", "--ff-scale-y", "--ff-scale-z"],
    dynamic: {
      enabled: true,
      dataTypes: ["number"],
      customFunction: (x: number) => x / 100,
    },
    keys: {},
  },
  scaleX: {
    prefix: "scale-x",
    property: "--ff-scale-x",
    dynamic: {
      enabled: true,
      dataTypes: ["number"],
      customFunction: (x: number) => x / 100,
    },
    keys: {},
  },
  scaleY: {
    prefix: "scale-y",
    property: "--ff-scale-y",
    dynamic: {
      enabled: true,
      dataTypes: ["number"],
      customFunction: (x: number) => x / 100,
    },
    keys: {},
  },
  scaleZ: {
    prefix: "scale-z",
    property: "--ff-scale-z",
    dynamic: {
      enabled: true,
      dataTypes: ["number"],
      customFunction: (x: number) => x / 100,
    },
    keys: {},
  },
  transformShorthand: {
    prefix: "transform",
    property: "transform",
    dynamic: {
      enabled: true,
      dataTypes: ["shorthand"],
      functions: [
        "matrix",
        "matrix3d",
        "translate",
        "translate3d",
        "translateX",
        "translateY",
        "translateZ",
        "scale",
        "scale3d",
        "scaleX",
        "scaleY",
        "scaleZ",
        "skew",
        "skewX",
        "skewY",
        "rotate",
        "rotate3d",
        "rotateX",
        "rotateY",
        "rotateZ",
        "perspective",
      ],
      combinations: 21,
    },
    keys: {},
  },
  transformPerspective: {
    prefix: "transform-perspective",
    property: "--ff-transform-perspective",
    dynamic: { enabled: true, dataTypes: ["length"] },
    keys: {},
  },
};
