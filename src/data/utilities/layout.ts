import { defineUtilities } from "../../helpers/helpers";

export default defineUtilities({
  display: {
    prefix: "",
    property: "display",
    dynamic: { enabled: false, dataTypes: ["keyword"] },
    keys: {
      block: "block",
      inline: "inline",
      "inline-block": "inline-block",
      flex: "flex",
      "inline-flex": "inline-flex",
      grid: "grid",
      "inline-grid": "inline-grid",
      "flow-root": "flow-root",
      hidden: "none",
      contents: "contents",
      table: "table",
      "inline-table": "inline-table",
      "table-cell": "table-cell",
      "table-column": "table-column",
      "table-column-group": "table-column-group",
      "table-footer-group": "table-footer-group",
      "table-header-group": "table-header-group",
      "table-row": "table-row",
      "table-row-group": "table-row-group",
      "table-caption": "table-caption",
      "list-item": "list-item",
    },
  },
  float: {
    prefix: "float",
    property: "float",
    dynamic: { enabled: false, dataTypes: ["keyword"] },
    keys: { none: "none", left: "left", right: "right" },
  },
  boxSizing: {
    prefix: "box",
    property: "box-sizing",
    dynamic: { enabled: false, dataTypes: ["keyword"] },
    keys: { content: "content-box", border: "border-box" },
  },
  clear: {
    prefix: "clear",
    property: "clear",
    dynamic: { enabled: false, dataTypes: ["keyword"] },
    keys: {
      none: "none",
      left: "left",
      right: "right",
      both: "both",
    },
  },
  objectFit: {
    prefix: "object",
    property: "object-fit",
    dynamic: { enabled: false, dataTypes: ["keyword"] },
    keys: {
      fill: "fill",
      contain: "contain",
      cover: "cover",
      none: "none",
      "scale-down": "scale-down",
    },
  },
  objectPosition: {
    prefix: "object",
    property: "object-position",
    dynamic: {
      enabled: true,
      dataTypes: ["length", "percentage", "keyword"],
      combinations: 2,
    },
    keys: {
      none: "none",
      bottom: "bottom",
      top: "top",
      center: "center",
      "center-bottom": "center bottom",
      "center-top": "center top",
      left: "left",
      "left-bottom": "left bottom",
      "left-top": "left top",
      right: "right",
      "right-bottom": "right bottom",
      "right-top": "right top",
    },
  },
  overflow: {
    prefix: "overflow",
    property: "overflow",
    dynamic: { enabled: true, dataTypes: ["keyword"], combinations: 2 },
    keys: {
      visible: "visible",
      hidden: "hidden",
      clip: "clip",
      scroll: "scroll",
      auto: "auto",
    },
  },
  overflowX: {
    prefix: "overflow-x",
    property: "overflow-x",
    dynamic: { enabled: false, dataTypes: ["keyword"] },
    keys: {
      visible: "visible",
      hidden: "hidden",
      clip: "clip",
      scroll: "scroll",
      auto: "auto",
    },
  },
  overflowY: {
    prefix: "overflow-y",
    property: "overflow-y",
    dynamic: { enabled: false, dataTypes: ["keyword"] },
    keys: {
      visible: "visible",
      hidden: "hidden",
      clip: "clip",
      scroll: "scroll",
      auto: "auto",
    },
  },
  overflowWrap: {
    prefix: "wrap",
    property: "overflow-wrap",
    dynamic: { enabled: false, dataTypes: ["keyword"] },
    keys: {
      normal: "normal",
      break: "break-word",
      anywhere: "anywhere",
    },
  },
  overflowAnchor: {
    prefix: "anchor",
    property: "overflow-anchor",
    dynamic: { enabled: false, dataTypes: ["keyword"] },
    keys: {
      auto: "auto",
      none: "none",
    },
  },
  overscrollBehavior: {
    prefix: "overscroll",
    property: "overscroll-behavior",
    dynamic: { enabled: true, dataTypes: ["keyword"], combinations: 2 },
    keys: {
      auto: "auto",
      contain: "contain",
      none: "none",
    },
  },
  overscrollBehaviorX: {
    prefix: "overscroll-x",
    property: "overscroll-behavior-x",
    dynamic: { enabled: false, dataTypes: ["keyword"] },
    keys: {
      auto: "auto",
      contain: "contain",
      none: "none",
    },
  },
  overscrollBehaviorY: {
    prefix: "overscroll-y",
    property: "overscroll-behavior-y",
    dynamic: { enabled: false, dataTypes: ["keyword"] },
    keys: {
      auto: "auto",
      contain: "contain",
      none: "none",
    },
  },
  position: {
    prefix: "",
    property: "position",
    dynamic: { enabled: false, dataTypes: ["keyword"] },
    keys: {
      static: "static",
      relative: "relative",
      absolute: "absolute",
      sticky: "sticky",
      fixed: "fixed",
    },
  },
  visibility: {
    prefix: "",
    property: "visibility",
    dynamic: { enabled: false, dataTypes: ["keyword"] },
    keys: {
      visible: "visible",
      invisible: "hidden",
      collapse: "collapse",
    },
  },
  zIndex: {
    prefix: "z",
    property: "z-index",
    dynamic: {
      enabled: true,
      dataTypes: ["integer", "keyword", "keyword"],
    },
    keys: { auto: "auto" },
  },
  top: {
    prefix: "top",
    property: "top",
    dynamic: {
      enabled: true,
      dataTypes: ["length", "percentage", "keyword"],
    },
    keys: { auto: "auto" },
  },
  left: {
    prefix: "left",
    property: "left",
    dynamic: {
      enabled: true,
      dataTypes: ["length", "percentage", "keyword"],
    },
    keys: { auto: "auto" },
  },
  right: {
    prefix: "right",
    property: "right",
    dynamic: {
      enabled: true,
      dataTypes: ["length", "percentage", "keyword"],
    },
    keys: { auto: "auto" },
  },
  bottom: {
    prefix: "bottom",
    property: "bottom",
    dynamic: {
      enabled: true,
      dataTypes: ["length", "percentage", "keyword"],
    },
    keys: { auto: "auto" },
  },
  isolation: {
    prefix: "isolate",
    property: "isolation",
    dynamic: { enabled: false, dataTypes: ["keyword"] },
    keys: { auto: "auto", "": "isolate" },
  },
  shapeMargin: {
    prefix: "shape",
    property: "shape-margin",
    dynamic: { enabled: true, dataTypes: ["length", "percentage"] },
    keys: {},
  },
  shapeOutside: {
    prefix: "shape",
    property: "shape-outside",
    dynamic: {
      enabled: true,
      dataTypes: ["function", "keyword"],
      functions: [
        "circle",
        "ellipse",
        "inset",
        "polygon",
        "path",
        "polygon",
        "url",
      ],
    },
    keys: {
      none: "none",
      margin: "margin-box",
      content: "content-box",
      border: "border-box",
      padding: "padding-box",
    },
  },
  shapeImageThreshold: {
    prefix: "shape-threshold",
    property: "shape-image-threshold",
    dynamic: { enabled: true, dataTypes: ["alpha"] },
    keys: {},
  },
  contain: {
    prefix: "contain",
    property: "contain",
    dynamic: { enabled: true, dataTypes: ["keyword"], combinations: 4 },
    keys: {
      none: "none",
      strict: "strict",
      content: "content",
      size: "size",
      layout: "layout",
      style: "style",
      paint: "paint",
    },
  },
  breakInside: {
    prefix: "avoid",
    property: "break-inside",
    dynamic: { enabled: false, dataTypes: ["keyword"] },
    keys: {
      auto: "auto",
      "": "avoid",
      page: "avoid-page",
      column: "avoid-column",
      region: "avoid-region",
    },
  },
  aspect: {
    prefix: "aspect",
    property: "aspect-ratio",
    dynamic: {
      enabled: true,
      dataTypes: ["ratio"],
      ratioAllowSingle: true,
    },
    keys: { auto: "auto" },
  },
  all: {
    prefix: "all",
    property: "all",
    dynamic: { enabled: false, dataTypes: ["keyword"] },
    keys: {
      initial: "initial",
      inherit: "inherit",
      unset: "unset",
      revert: "revert",
    },
  },
  //todo inherit, initial, revert, and unset utilities. their property shall be dynamic, and the utility prefix shall be applied as the keyword. Must create special thing in dynamic generator for this.
});
